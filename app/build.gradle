apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.alimparkar.themoviedb"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            //add production level key
            buildConfigField "String", "API_KEY", project.api_key
        }
        debug {
            buildConfigField "String", "API_KEY", project.api_key
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    //lifecycle architecture
    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$lifecycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$lifecycleVersion"
    // Java8 support for Lifecycles
    implementation "android.arch.lifecycle:common-java8:$lifecycleVersion"
    // RxJava support for Room
    implementation "android.arch.persistence.room:rxjava2:1.0.0"
    // ReactiveStreams support for LiveData
    implementation "android.arch.lifecycle:reactivestreams:$lifecycleVersion"
    implementation "android.arch.paging:runtime:$pagingVersion"


    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation "com.android.support:appcompat-v7:${supportVersion}"
    implementation "com.android.support:design:${supportVersion}"
    implementation "com.android.support:cardview-v7:${supportVersion}"

    // logging
    implementation "com.jakewharton.timber:timber:${timberVersion}"

    implementation "io.reactivex.rxjava2:rxjava:${rxJavaVersion}"
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    implementation "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}"

    //Dagger
    implementation "com.google.dagger:dagger:${daggerVersion}"
    implementation "com.google.dagger:dagger-android:${daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${daggerVersion}"
    // if you use the support libraries
    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${daggerVersion}"
    compileOnly 'javax.annotation:jsr250-api:1.0'


    // retrofit library
    implementation("com.squareup.retrofit2:retrofit:${retrofitVersion}") {
        // exclude Retrofitâ€™s OkHttp peer-dependency module and define your own module import
        exclude module: 'okhttp'
    }
    implementation "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofitVersion}"

    annotationProcessor 'com.android.databinding:compiler:3.1.1'

    implementation "com.github.bumptech.glide:glide:${glideVersion}"
    annotationProcessor "com.github.bumptech.glide:compiler:${glideVersion}"
    implementation "com.github.bumptech.glide:okhttp3-integration:${glideVersion}"

}
